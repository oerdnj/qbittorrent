language: cpp

os:
  - linux
  - osx
osx_image: xcode7.3

env:
  matrix:
    # Uncomment when Travis upgraded "Ubuntu 12.04 LTS" to a newer version whose repo will have a more up-to-date libtorrent package
    #- lt_branch=dist gui=true
    #- lt_branch=dist gui=false
    - lt_branch=RC_1_0 qt=5 gui=true
    - lt_branch=RC_1_0 qt=5 gui=false
    - lt_branch=RC_1_0 qt=4 gui=true
    - lt_branch=RC_1_0 qt=4 gui=false
  global:
    - secure: "OI9CUjj4lTb0HwwIZU5PbECU3hLlAL6KC8KsbwohG8/O3j5fLcnmDsK4Ad9us5cC39sS11Jcd1kDP2qRcCuST/glVNhLkcjKkiQerOfd5nQ/qL4JYfz/1mfP5mdpz9jHKzpLUIG+TXkbSTjP6VVmsb5KPT+3pKEdRFZB+Pu9+J8="
    - coverity_branch: coverity_scan
matrix:
  allow_failures:
    - os: osx
      env: lt_branch=RC_1_0 qt=4 gui=true
    - os: osx
      env: lt_branch=RC_1_0 qt=4 gui=false

branches:
  except:
    - search_encoding_windows
    - v2_9_x

notifications:
  email:
    on_success: change
    on_failure: change

cache:
  ccache: true
  directories:
    - $HOME/hombebrew_cache

# opt-in Ubuntu Trusty
dist: trusty
# container-based builds
sudo: false

addons:
  coverity_scan:
    project:
      name: "qbittorrent/qBittorrent"
      description: "Build submitted via Travis CI"
    build_command_prepend: "./bootstrap.sh && ./configure $qbtconf"
    build_command: make
    branch_pattern: $coverity_branch
    notification_email: sledgehammer999@qbittorrent.org
  apt:
    sources:
      # sources list: https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
      #- ubuntu-toolchain-r-test
      #- boost-latest
      - sourceline: 'ppa:qbittorrent-team/qbittorrent-stable'
      - sourceline: 'ppa:beineri/opt-qt551-trusty'
    packages:
      # packages list: https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
      - autoconf
      - automake
      - colormake
      - libssl-dev
      - libboost-dev
      - libboost-system-dev
      - libtorrent-rasterbar-dev
      # Qt 5.5.1
      - qt55base
      - qt55tools
      # Qt 4.8
      - qt4-default
      - libqt4-dev

before_install:
  # only allow specific build for coverity scan, others will stop
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ] && ! [ "$TRAVIS_OS_NAME" = "linux" -a "$lt_branch" = "RC_1_0" -a "$gui" = true ]; then exit ; fi

  - shopt -s expand_aliases
  - alias make="colormake -j3" # Using nprocs/2 sometimes may fail (gcc is killed by system)
  #- libt_path="$HOME/libt_install"
  #- ltconf="$ltconf --prefix="$libt_path" --disable-geoip"
  - qbt_path="$HOME/qbt_install"
  - qbtconf="$qbtconf --prefix="$qbt_path" PKG_CONFIG_PATH="$libt_path/lib/pkgconfig":/opt/qt55/lib/pkgconfig:$PKG_CONFIG_PATH"

  # options for specific branches
  - if [ "$qt" = 4 ]; then qbtconf="$qbtconf --with-qt4" ; fi
  - if [ "$gui" = false ]; then qbtconf="$qbtconf --disable-gui" ; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # setup virtual display for after_success target
      if [ "$gui" = true ]; then export "DISPLAY=:99.0" && /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16 ; fi ;

      # Qt 5
      PATH=/opt/qt55/bin:${PATH}
    fi

  # print settings
  - echo $lt_branch
  - echo $gui
  - echo $ltconf
  - echo $qbtconf

install:
  #- |
    #if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # build libtorrent from source
      #if [ "$lt_branch" != "dist" ]; then
        #cd "$HOME" && pwd && git clone --depth 1 https://github.com/arvidn/libtorrent.git --branch $lt_branch ;
        #cd libtorrent && ./autotool.sh && ./configure $ltconf && make install ;
      #fi ;
    #fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      # dependencies
      brew update > /dev/null
      brew install colormake ccache zlib
      PATH="/usr/local/opt/ccache/libexec:$PATH"
      brew link --force zlib
      brew outdated "pkg-config" || brew upgrade "pkg-config"

      wget https://builds.shiki.hu/homebrew/version ;
      if ! cmp --quiet "version" "$HOME/hombebrew_cache/version" ; then
        echo "Cached files are different from server. Downloading new ones." ;
        # First delete old files
        rm -r "$HOME/hombebrew_cache" ;
        mkdir "$HOME/hombebrew_cache";
        cp "version" $HOME/hombebrew_cache ;
        cd "$HOME/hombebrew_cache" ;
        wget https://builds.shiki.hu/homebrew/libtorrent-rasterbar.rb ;
        wget https://builds.shiki.hu/homebrew/libtorrent-rasterbar-1.0.11+git20172003.8736a59adc.el_capitan.bottle.tar.gz
        wget https://builds.shiki.hu/homebrew/qt.rb
        wget https://builds.shiki.hu/homebrew/qt-5.9.1.el_capitan.bottle.tar.gz
      fi

      # Copy custom libtorrent bottle to homebrew's cache so it can find and install it
      # Also install our custom libtorrent formula by passing the local path to it
      # These 2 files are restored from Travis' cache.
      cp "$HOME/hombebrew_cache/libtorrent-rasterbar-1.0.11+git20172003.8736a59adc.el_capitan.bottle.tar.gz" "$(brew --cache)"
      brew install "$HOME/hombebrew_cache/libtorrent-rasterbar.rb" ;

      # Qt
      if [ "$qt" = 4 ]; then brew install qt && ln -s /usr/local/Cellar/qt/4.8.7_2/plugins /usr/local ; fi ;
      if [ "$qt" = 5 ]; then
        # Copy custom qt5 bottle to homebrew's cache so it can find and install it
        # Also install our custom qt5 formula by passing the local path to it
        # These 2 files are restored from Travis' cache.
        cp "$HOME/hombebrew_cache/qt-5.9.1.el_capitan.bottle.tar.gz" "$(brew --cache)"
        brew install "$HOME/hombebrew_cache/qt.rb"
        brew link --force qt
      fi
    fi
  - |
    if [ "$TRAVIS_BRANCH" != "$coverity_branch" ]; then
      export use_ccache=true
      ccache -V && ccache --show-stats && ccache --zero-stats
    fi

script:
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ]; then exit ; fi # skip usual build when running coverity scan
  - cd "$TRAVIS_BUILD_DIR" && ./bootstrap.sh && ./configure $qbtconf
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      sed -i "" -e "s/^\(CC.*&&\).*$/\1 $CC/" src/Makefile ;  # workaround for Qt & ccache: https://bugreports.qt.io/browse/QTBUG-31034
      sed -i "" -e "s/^\(CXX.*&&\).*$/\1 $CXX/" src/Makefile ;
      sed -i "" -e 's/^\(CXXFLAGS.*\)$/\1 -Wno-unused-local-typedefs -Wno-inconsistent-missing-override/' src/Makefile ;
    fi
  - make && make install

after_success:
  - if [ "$gui" = true ]; then qbt_exe="qbittorrent" ; else qbt_exe="qbittorrent-nox" ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cd "$qbt_path/bin" ; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      macdeployqt "$TRAVIS_BUILD_DIR/src/$qbt_exe.app" ;
      cd "$TRAVIS_BUILD_DIR/src/$qbt_exe.app/Contents/MacOS" ;
    fi
  - ./$qbt_exe --version

after_script:
  - if [ "$use_ccache" = true ]; then ccache --show-stats ; fi
